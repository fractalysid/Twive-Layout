/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "./boards/shields/lucy/italian.keycodes"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT                 0

#define UTILITY                 1

#define EXTRA                   2

#define NAVIGATION              3

#define R_SYMBOLS               4

#define L_SYMBOLS               5

#define FUNCTIONS               6

#define NUMBERS                 7

#define MEDIA                   8

#define KEYBOARD                9

#define QWERTY                  10

&mt {
    //tapping-term-ms = <300>;
    //quick_tap_ms = <0>;
    //flavor = "tap-preferred";
    //retro-tap;
};

/ {

    macros {
           gmail: gmail {
               label = "gmail_email";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp S &kp A &kp B &kp B &kp I &kp O
                   >
                   ;
           };

            // I don't know why but this doesn't work
           linux_reboot: linux_reboot {
                label = "reboot_linux_system_with_SysRq";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <500>;
                tap-ms = <40>;
                bindings
                     = <&macro_press &kp LALT>
                     , <&macro_press &kp PRINTSCREEN>
                     , <&kp R &kp E>
                     , <&kp I>
                     , <&kp S>
                     , <&kp U>
                     , <&kp B>
                     , <&macro_release &kp LALT>
                     , <&macro_release &kp PRINTSCREEN>
                     ;
           };

       };

    combos {
        compatible = "zmk,combos";

        // Get back to default layer by pressing both thumb keys
        combo_escape_qwerty {
            timeout-ms = <100>;
            layers= <QWERTY>;
            key-positions = <30 35>;
            bindings = <&to DEFAULT>;
        };

        // easier to hit
        combo_escape_qwerty2 {
            timeout-ms = <150>;
            layers= <QWERTY>;
            key-positions = <16 17 18 19>;
            bindings = <&to DEFAULT>;
        };

        // combo to tab in qwerty
        combo_tab_qwerty {
            timeout-ms = <75>;
            layers = <QWERTY>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
   };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_keyboard_layer {
            if-layers = <UTILITY EXTRA>;
            then-layer = <KEYBOARD>;
        };
    };

    behaviors {

        // Behaviors for home row layers toggle

        llt: left_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // 250
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        rlt: right_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    //250
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]

        };

        // Behaviors for mods in the bottom row

        lm: left_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_LEFT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <175>;    // 200
            quick-tap-ms = <80>;        // 125
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        rm: right_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_RIGHT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <175>;    // 200
            quick-tap-ms = <80>;        // 125
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]
       };

    // Layer on left thumb is for quick access to symbols used while typing so I need a shorter window for triggering
    // the hold behavior. This is possible as RETURN is not used in the middle of something. Balanced behavior is perfect here
    qlt: quick_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_LAYER_TOGGLE";
            #binding-cells = <2>;
            tapping-term-ms = <125>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
       };
    };

// IT IS MEANT TO BE USED WITH THE ITALIAN QWERTY LAYOUT
// BASED on the FERRIS layout by pierrechevalier83
// https://github.com/qmk/qmk_firmware/tree/master/keyboards/ferris/keymaps/default

        keymap {
                compatible = "zmk,keymap";

//  DEFAULT layer with COLEMAK-DH
       		default_layer {
		bindings = <
		&kp Q               &kp W               &kp F               &kp P               &kp B           &kp J               &kp L               &kp U               &kp Y               &kp BKSP
		&lm LSHFT A         &llt NUMBERS R      &llt MEDIA S        &llt R_SYMBOLS T    &kp G           &kp M               &rlt L_SYMBOLS N    &rlt FUNCTIONS E    &rlt NAVIGATION I   &rm LSHFT O
		&lm LSHFT Z         &lm LCTRL X         &lm LALT C          &lm LGUI D          &kp V           &kp K               &rm LGUI H          &rm LALT CMMA       &rm LCTRL DOT       &rm LSHFT IT_SQUOT
                                                &qlt EXTRA RET      &none               &none           &none               &none               &lt UTILITY SPC
		>;
		};

// UTILITY LAYER
// &kp K_COPY &kp K_PASTE &kp K_CUT don't work
		    utility_layer {
		bindings = <
		&kp ESC             &kp PRINTSCREEN     &caps_word          &kp CAPS            &kp INSERT      &kp PAGE_UP         &kp HOME            &kp END             &kp DEL             &kp LC(DEL)
		&kp TAB             &sk LALT            &sk LCTRL           &sk LSHIFT          &none           &kp LA(TAB)         &kp LEFT            &kp UP              &kp DOWN            &kp RIGHT
		&kp LC(Z)           &kp LC(X)           &kp LC(C)           &kp LC(V)           &kp LC(LS(Z))   &kp PAGE_DOWN       &none               &kp LC(LA(DOWN))    &kp LC(LA(UP))      &none
                                                &trans              &trans              &trans          &trans              &trans              &none
		>;
		};

// EXTRA
            extra_layer {
		bindings = <
		&kp IT_EXCL         &kp IT_CARET        &kp IT_UGRV         &kp IT_EACU         &trans          &trans              &kp IT_HASH         &kp IT_AST          &kp IT_QUES         &kp LC(BKSP)
		&kp IT_IGRV         &kp IT_AGRV         &kp IT_OGRV         &kp IT_EGRV         &trans          &trans              &kp IT_EQL          &kp IT_FSLH         &kp IT_MINUS        &kp IT_UNDER
		&trans              &trans              &trans              &trans              &trans          &trans              &kp IT_PLUS         &kp IT_GREAT        &kp IT_LESS         &kp IT_DQUOT
                                                &none               &trans              &trans          &trans              &trans              &trans
		>;
		};

// NAVIGATION LAYER
// As navigation is in the utility layer, here I will add mouse keys and extra navigations keys
// Add shortcuts to change tabs
		    navigation_layer {
		bindings = <
		&trans              &trans              &trans              &trans              &trans          &trans              &trans              &trans              &trans              &trans
		&kp K_BACK          &kp K_FORWARD       &trans              &trans              &trans          &trans              &trans              &trans              &none               &trans
		&trans              &trans              &trans              &trans              &trans          &trans              &trans              &trans              &trans              &trans
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};

// RIGHT SYMBOLS
            rsymbols_layer {
		bindings = <
		&trans              &trans              &trans              &trans              &trans          &trans              &kp IT_LBKT         &kp IT_RBKT         &trans              &trans
    	&trans              &trans              &trans              &none               &trans          &trans              &kp IT_LBRC         &kp IT_RPAR         &kp IT_LPAR         &kp IT_RBRC
		&trans              &trans              &trans              &trans              &trans          &trans              &kp IT_USD          &kp IT_TILDE        &none               &trans
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};

// LEFT SYMBOLS
       		lsymbols_layer {
		bindings = <
		&trans              &kp IT_DEGREE       &kp IT_BSLH         &kp IT_EUR          &trans          &trans              &trans              &trans              &trans              &trans
		&kp IT_PERC         &kp IT_AT           &kp IT_PIPE         &kp IT_AND          &trans          &trans              &none               &trans              &trans              &trans
		&trans              &trans              &kp IT_PND          &kp IT_BKTK         &trans          &trans              &trans              &trans              &trans              &trans
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};

// FUNCTIONS KEYS
// Access to &sysrq_emergency_reboot is intentionally cumbersome to avoid pressing it by mistake
		    functions_layer {
		bindings = <
		&kp F10             &kp F7              &kp F8              &kp F9              &trans          &trans              &trans              &trans              &trans              &trans
        &kp F11             &kp F4              &kp F5              &kp F6              &trans          &linux_reboot       &kp LA(LCTL)        &none               &trans              &trans
        &kp F12             &kp F1              &kp F2              &kp F3              &trans          &trans              &trans              &trans              &trans              &trans
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};
// NUMBERS KEYS
		    numbers_layer {
		bindings = <
		&trans              &trans              &kp IT_AST          &kp IT_FSLH         &trans          &trans              &kp N7              &kp N8              &kp N9              &trans
        &trans              &none               &kp IT_PLUS         &kp IT_MINUS        &trans          &kp COMMA           &kp N1              &kp N2              &kp N3              &kp N0
        &trans              &trans              &kp IT_EQL          &trans              &trans          &trans              &kp N4              &kp N5              &kp N6              &kp DOT
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};

// MEDIA LAYER
		    media_layer {
		bindings = <
		&trans              &trans              &trans              &trans              &trans          &trans              &kp K_VOLUME_DOWN   &kp K_VOLUME_UP     &kp C_BRI_DEC       &kp C_BRI_INC
		&trans              &trans              &none               &trans              &trans          &trans              &kp K_PLAY_PAUSE    &kp K_PREV          &kp K_NEXT          &kp K_STOP2
		&trans              &trans              &trans              &trans              &trans          &trans              &kp K_MUTE          &trans              &trans              &trans
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};

// KEYBOARD LAYER
// reset and bootloader must be present on both sides as they only work on the side where they are pressed
		    keyboard_layer {
		bindings = <
		&reset              &bootloader         &none               &none               &none           &none               &none               &none               &bootloader         &reset
		&none               &none               &none               &bt BT_CLR          &out OUT_USB    &out OUT_BLE        &bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3
		&none               &none               &none               &none               &none           &none               &to QWERTY          &none               &none               &bt BT_SEL 4
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};

//  QWERTY, mainly for gaming or letting others try the keyboard
       		qwerty_layer {
		bindings = <
		&kp Q               &kp W               &kp E               &kp R               &kp T           &kp Y               &kp U               &kp I               &kp O               &kp P
		&kp A               &kp S               &kp D               &kp F               &kp G           &kp H               &kp J               &kp K               &kp L               &kp BKSP
		&kp Z               &kp X               &kp C               &kp V               &kp B           &kp M               &mt LGUI N          &mt LALT CMMA       &mt LCTRL DOT       &mt LSHFT IT_MINUS
                                                &kp SPC             &none               &none           &none               &none               &kp RET
		>;
		};

	};
};
