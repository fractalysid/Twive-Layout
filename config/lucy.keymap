/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "./boards/shields/lucy/italian.keycodes"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

// Base colemak-dh layer
#define DEFAULT                 0

// The layer always accessible through the right thumb cluster with access to TAB, ESC, DELETE, CAPS WORD
// GNOME layout switch, KEYBOARD layer and other special functions
#define UTILITY                 1

// Common keys, like those used in the shell, accents and so on
#define COMMON                  2

// Navigation layer with arrows, page up, down and so on
#define NAVIGATION              3

// Symbols accessed on the right side by pressing a key on the left side
#define RIGHT_SYMBOLS           4

// Symbols accessed on the left side by pressing a key on the right side, also includes accented letters
#define LEFT_SYMBOLS            5

// Only FN keys, this layer can definitely made richer
#define FUNCTIONS               6

// Numbers and operators
#define NUMBERS                 7

// Media keys
#define MEDIA                   8

// Keyboard functions like reset, bootloader mode and bluetooth management
#define KEYBOARD                9

// Qwerty layer in case I would like to use the keyboard for gaming
#define QWERTY                  10

&mt {
    //tapping-term-ms = <300>;
    //quick_tap_ms = <0>;
    //flavor = "tap-preferred";
    //retro-tap;
};

/ {

    macros {
           gmail: gmail {
               label = "gmail_email";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp S &kp A &kp B &kp B &kp I &kp O
                   >
                   ;
           };

           sysrq_emergency_reboot: sysrq_emergency_reboot {
                label = "reboot_linux_system_with_SysRq";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <500>;
                tap-ms = <40>;
                bindings
                     = <&macro_press &kp LALT>
                     , <&macro_press &kp PRINTSCREEN>
                     , <&kp R &kp E>
                     , <&kp I>
                     , <&kp S>
                     , <&kp U>
                     , <&kp B>
                     , <&macro_release &kp LALT>
                     , <&macro_release &kp PRINTSCREEN>
                     ;
           };

       };

    combos {
        compatible = "zmk,combos";

        // Get back to default layer
        escape_qwerty {
            timeout-ms = <50>;
            layers= <QWERTY>;
            key-positions = <0 18>;
            bindings = <&to DEFAULT>;
        };
   };

    behaviors {
        hl_left: homerow_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        hl_right: homerow_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]

        };

    lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

    rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]
       };

    // Questa in verità non la sto usando
    bm: bottomrow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "BOTTOMROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
       };

    // Il layer di sinistra è ad accesso rapido quindi voglio timings brevi. Posso permettermelo perché
    // quando premo invio non sto per premere subito un altro tasto
    llt: left_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_LAYER_TOGGLE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
       };
    };

// RIGHT NOW IT IS MEANT TO BE USED WITH THE ITALIAN QWERTY LAYOUT
// BASED on the FERRIS layout by pierrechevalier83
// https://github.com/qmk/qmk_firmware/tree/master/keyboards/ferris/keymaps/default

        keymap {
                compatible = "zmk,keymap";

//  DEFAULT-DH
       		default_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B 						                                            &kp J &kp L  &kp U    &kp Y   &kp BKSP
		&kp A &hl_left FUNCTIONS R &hl_left MEDIA S &hl_left RIGHT_SYMBOLS T &kp G 			            &kp M &hl_right LEFT_SYMBOLS N &hl_right NAVIGATION E &hl_right NUMBERS I &kp O
		&lh_pht LSHFT Z &lh_pht LCTRL X &lh_pht LALT C &kp D &kp V				                        &kp K &kp H  &rh_pht LALT CMMA &rh_pht LCTRL DOT &rh_pht LSHFT IT_SQUOT
          	                                    &llt COMMON RET &none &none  		                    &none &none &lt UTILITY SPC
		>;
		};

// UTILITY LAYER, ALWAYS ACCESSIBLE
// TODO: posso rimuovere sysrq che non serve così come è implementato
		    utility_layer {
		bindings = <
		&kp ESC &none &caps_word &trans &trans            			    &kp INSERT &kp SYSREQ &kp PRINTSCREEN &trans &kp DEL
		&kp TAB &sk LALT &sk LCTRL &sk LSHIFT &gmail                   	&kp LG(SPC) &kp LGUI  &trans &trans &kp RET
		&sk LGUI &trans &trans &trans &trans    			            &trans &trans &trans &trans &trans
					&mo KEYBOARD &trans &trans  					    &trans &trans &none
		>;
		};

// COMMON LAYER with commonly accessed symbols like accents on the left and shell symbols on the right
            common_layer {
		bindings = <
		&kp IT_CARET &kp IT_CEGR &kp IT_UGRV &trans  &trans                     &kp IT_TILDE &kp IT_AND &kp IT_PIPE &kp IT_QUES &trans
		&kp IT_IGRV &kp IT_AGRV &kp IT_OGRV &kp IT_EGRV &kp IT_EACU             &trans &kp IT_FSLH &kp DOT &kp IT_MINUS &kp IT_UNDER
		&trans &trans &trans &trans &trans    			                        &trans &kp IT_BSLH &kp IT_BKTK &kp IT_LESS &kp IT_GREAT
					&none &trans &trans  					                    &trans &trans &trans
		>;
		};

// NAVIGATION LAYER
		    navigation_layer {
		bindings = <
		&kp HOME &kp PAGE_UP &kp PAGE_DOWN &kp END &kp LC(LS(TAB))                      &trans &trans   &trans   &trans  &trans
		&kp LEFT &kp UP &kp DOWN &kp RIGHT &kp LC(TAB)		                            &trans &kp LGUI  &none &trans &trans
		&kp K_FORWARD  &kp LC(LA(UP)) &kp LC(LA(DOWN)) &kp LA(TAB) &kp K_BACK   		&trans &trans  &trans  &trans &trans
					                &trans &trans &trans  			                    &trans &trans &trans
		>;
		};

//  RIGHT SYMBOLS
// TODO: capire come migliorare questo layer
       		rsymbols_layer {
		bindings = <
		&trans &trans &trans &trans &trans    	                        &kp IT_PERC &kp IT_FSLH &kp IT_BSLH &kp IT_QUES &trans
		&trans &trans &trans &none &trans                               &kp IT_UNDER &kp IT_OGRV &kp IT_AGRV &kp IT_EGRV &kp IT_EACU
		&trans &trans &trans &trans &trans	                            &kp IT_PND &kp IT_EUR &kp IT_USD &kp IT_UGRV  &kp  IT_IGRV
					                &trans  &trans &trans    			&trans &trans &trans
		>;
		};

//  LEFT SYMBOLS
// TODO: use this layers for programming related symbols
       		lsymbols_layer {
		bindings = <
		&kp IT_EXCL &kp IT_DQUOT &kp IT_AT &kp IT_HASH &kp IT_AND               	        &trans &trans &trans &trans &trans
		&kp IT_LBRC &kp IT_RBRC &kp IT_LPAR &kp IT_RPAR &kp IT_PIPE                 		&trans &none &trans &trans &trans
		&kp IT_LESS &kp IT_TILDE &kp IT_LBKT &kp IT_RBKT  &kp IT_GREAT                      &trans &trans &trans &trans &trans
					                                &trans  &trans &trans 			        &trans &trans &trans
		>;
		};

// FUNCTIONS KEYS
		    functions_layer {
		bindings = <
		&trans &trans &trans &trans &trans    		                            &trans &kp F7 &kp F8 &kp F9 &kp F10
		&trans &none &mt LALT LCTL &kp LALT &sysrq_emergency_reboot 		    &trans &kp F4 &kp F5 &kp F6 &kp F11
		&trans &trans &trans &trans &trans    			                        &trans &kp F1 &kp F2 &kp F3 &kp F12
					       &trans  &trans &trans  	                		    &trans &trans &trans
		>;
		};	
// NUMBERS KEYS
// TODO: posso valutare l'idea di mettere lo shift così da avere + e * e - e _ in 2 tasti
		    numbers_layer {
		bindings = <
		&kp IT_FSLH  &kp N7  &kp N8  &kp  N9  &kp IT_PLUS    		&trans &trans &trans &trans &trans
		&kp N0 &kp N1  &kp N2  &kp N3 &kp IT_MINUS                  &trans &kp DOT &kp COMMA &none &trans
		&kp IT_AST  &kp N4 &kp N5 &kp N6 &kp IT_EQL    			    &trans &trans &trans &trans &trans
					           &trans  &trans &trans  			    &trans &trans &trans
		>;
		};

// MEDIA LAYER
		    media_layer {
		bindings = <
		&trans  &trans &none &trans &trans 			                            &trans &kp K_VOLUME_DOWN   &kp K_VOLUME_UP   &kp K_MUTE  &trans
		&trans  &trans &none &trans &trans  			                        &trans &kp K_PLAY_PAUSE  &kp K_PREV &kp K_NEXT &kp K_STOP2
		&trans  &trans &trans &trans &trans   			                        &trans &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &trans &trans
				            	&trans &trans &trans  					        &trans &trans &trans
		>;
		};

// KEYBOARD LAYER
		    keyboard_layer {
		bindings = <
		&reset  &bootloader &none &none &out OUT_USB 			        &out OUT_BLE &none   &none   &bootloader  &reset
		&none &none &bt BT_PRV &bt BT_NXT &bt BT_CLR  			        &to QWERTY &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
		&none  &none &none &none &bt BT_CLR   				            &trans &trans &trans &trans &trans
				            	&trans &trans &trans  					&trans &trans &trans
		>;
		};

//  QWERTY, mainly for gaming or letting others try the keyboard
       		qwerty_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R  &kp T 						&kp Y &kp U  &kp I &kp O &kp P
		&kp A &kp S &kp D &kp F &kp G 			        	&kp H &kp J &kp K &kp L &kp BKSP
		&mt LSHFT Z &kp X &kp C &kp V &kp B				    &kp K &kp H  &kp CMMA &kp DOT &kp IT_MINUS
          				&kp RET &none &none   		        &none &none &kp SPC
		>;
		};

	};
};
