/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "./boards/shields/lucy/italian.keycodes"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

// Base Colemak-DH layer
#define DEFAULT                 0

// The layer always accessible through the right thumb cluster with access to TAB, ESC, DELETE, CAPS WORD
// GNOME layout switch, KEYBOARD layer and other special functions
#define UTILITY                 1

// Common keys, like those used in the shell, accents and so on
#define COMMON                  2

// Navigation layer with arrows, page up, down and so on
#define NAVIGATION              3

// Symbols accessed on the right side by pressing a key on the left side
#define RIGHT_SYMBOLS           4

// Symbols accessed on the left side by pressing a key on the right side
#define LEFT_SYMBOLS            5

// Only FN keys, this layer can definitely made richer
#define FUNCTIONS               6

// Numbers and operators
#define NUMBERS                 7

// Media keys
#define MEDIA                   8

// Keyboard functions like reset, bootloader mode and bluetooth management
#define KEYBOARD                9

// Qwerty layer in case I would like to use the keyboard for gaming
#define QWERTY                  10

&mt {
    //tapping-term-ms = <300>;
    //quick_tap_ms = <0>;
    //flavor = "tap-preferred";
    //retro-tap;
};

/ {

    macros {
           gmail: gmail {
               label = "gmail_email";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp S &kp A &kp B &kp B &kp I &kp O
                   >
                   ;
           };

            // I don't know why but this doesn't work
           sysrq_emergency_reboot: sysrq_emergency_reboot {
                label = "reboot_linux_system_with_SysRq";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <500>;
                tap-ms = <40>;
                bindings
                     = <&macro_press &kp LALT>
                     , <&macro_press &kp PRINTSCREEN>
                     , <&kp R &kp E>
                     , <&kp I>
                     , <&kp S>
                     , <&kp U>
                     , <&kp B>
                     , <&macro_release &kp LALT>
                     , <&macro_release &kp PRINTSCREEN>
                     ;
           };

       };

    combos {
        compatible = "zmk,combos";

        // Get back to default layer by pressing both thumb keys
        combo_escape_qwerty {
            timeout-ms = <50>;
            layers= <QWERTY>;
            key-positions = <30 35>;
            bindings = <&to DEFAULT>;
        };
   };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_keyboard_layer {
            if-layers = <1 2>;
            then-layer = <9>;
        };
    };

    behaviors {

        // Behaviors for home row layers toggle
        // with 220 on tapping-term I often pressed RA too slowly and it triggered the hold on R
        // I could also change the term only on the left side as this was not an issue on right side

        // TODO: try lowering all the timings and see if I missfire the hold behavior

        hl_left: homerow_layers_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // 250
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        hl_right: homerow_layers_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    //250
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]

        };

        // Behaviors for mods in the bottom row

        m_left: mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_LEFT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <175>;    // 200
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        m_right: right_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_RIGHT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <175>;    // 200
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]
       };

    // Layer on left thumb is for quick access to symbols used while typing so I need a shorter window for triggering
    // the hold behavior. This is possible as RETURN is not used in the middle of something. Balanced behavior is perfect here
    ltt: left_thumb_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_LAYER_TOGGLE";
            #binding-cells = <2>;
            tapping-term-ms = <135>;    // 150
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
       };
    };

// RIGHT NOW IT IS MEANT TO BE USED WITH THE ITALIAN QWERTY LAYOUT
// BASED on the FERRIS layout by pierrechevalier83
// https://github.com/qmk/qmk_firmware/tree/master/keyboards/ferris/keymaps/default

        keymap {
                compatible = "zmk,keymap";

//  DEFAULT-DH
       		default_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B 						                                            &kp J &kp L  &kp U    &kp Y   &kp BKSP
		&m_left LSHFT A &hl_left NUMBERS R &hl_left MEDIA S &hl_left RIGHT_SYMBOLS T &kp G 			    &kp M &hl_right LEFT_SYMBOLS N &hl_right FUNCTIONS E &hl_right NAVIGATION I &m_right LSHFT O
		&m_left LSHFT Z &m_left LCTRL X &m_left LALT C &m_left LGUI D &kp V		                        &kp K &m_right LGUI H  &m_right LALT CMMA &m_right LCTRL DOT &m_right LSHFT IT_SQUOT
          	                                    &ltt COMMON RET &none &none  		                    &none &none &lt UTILITY SPC
		>;
		};

// UTILITY LAYER, ALWAYS ACCESSIBLE
// TODO: posso usare questo layer per aggiungere macro ma posso anche pensare di aggiungere qualcosa sulla home row
// del lato destro
// Non so perch√© ma  &kp K_COPY &kp K_PASTE &kp K_CUT non funzionano
		    utility_layer {
		bindings = <
		&kp ESC &trans &caps_word &trans &trans            			    &kp INSERT &kp LC(Z) &kp LC(LS(Z)) &kp PRINTSCREEN &kp DEL
		&kp TAB &sk LALT &sk LCTRL &sk LSHIFT &gmail                   	&kp LG(SPC) &kp LGUI  &kp LC(C) &kp LC(V) &kp LC(X)
		&sk LGUI &trans &trans &trans &trans    			            &trans &trans &trans &trans &trans
					    &trans &trans &trans  					        &trans &trans &none
		>;
		};

// COMMON LAYER with commonly accessed symbols like accents on the left and shell symbols on the right
            common_layer {
		bindings = <
		&kp IT_EXCL &kp IT_CEGR &kp IT_UGRV &trans  &trans                      &trans &kp IT_AND &kp IT_PIPE &kp IT_QUES &kp LC(BKSP)
		&kp IT_IGRV &kp IT_AGRV &kp IT_OGRV &kp IT_EGRV &kp IT_EACU             &trans &kp IT_FSLH &kp DOT &kp IT_MINUS &kp IT_UNDER
		&trans &trans &trans &trans &trans    			                        &trans &kp IT_BSLH &kp IT_BKTK &kp IT_TILDE &trans
					   &none &trans &trans  					                &trans &trans &trans
		>;
		};

// NAVIGATION LAYER
		    navigation_layer {
		bindings = <
		&kp HOME &kp PAGE_UP &kp PAGE_DOWN &kp END &kp LC(LS(TAB))                      &trans &kp LC(LA(LEFT))   &trans   &trans  &trans
		&kp LEFT &kp UP &kp DOWN &kp RIGHT &kp LC(TAB)		                            &trans &kp LGUI  &kp LC(LSHIFT) &none &kp LCTRL
		&kp K_FORWARD  &kp LC(LA(UP)) &kp LC(LA(DOWN)) &kp LA(TAB) &kp K_BACK   		&trans &kp LC(LA(RIGHT))  &trans  &trans &trans
					                &trans &trans &trans  			                    &trans &trans &trans
		>;
		};

// RIGHT SYMBOLS
            rsymbols_layer {
		bindings = <
		&trans &trans &trans &trans &trans    	                        &trans &kp IT_LBKT &kp IT_RBKT &kp IT_CARET &trans
    	&trans &trans &trans &none &trans                               &trans &kp IT_LPAR &kp IT_RPAR &kp IT_LBRC &kp IT_RBRC
		&trans &trans &trans &trans &trans	                            &trans &kp IT_LESS &kp IT_GREAT &kp IT_VIRGOLETTE_L  &kp IT_VIRGOLETTE_R
					 &trans  &trans &trans                  			&trans &trans &trans
		>;
		};

// LEFT SYMBOLS
       		lsymbols_layer {
		bindings = <
		&kp IT_PERC &kp IT_PLUS &kp IT_AST &kp IT_EQL &trans                  	        &trans &trans &trans &trans &trans
		&kp IT_DQUOT &kp IT_AND &kp IT_HASH &kp IT_AT &trans                    		&trans &none &trans &trans &trans
		&kp IT_DEGREE &kp IT_PND &kp IT_USD &kp IT_EUR  &trans                          &trans &trans &trans &trans &trans
					  &trans  &trans &trans 			                                &trans &trans &trans
		>;
		};

// FUNCTIONS KEYS
// Access to &sysrq_emergency_reboot is intentionally cumbersome to avoid pressing it by mistake
		    functions_layer {
		bindings = <
		&kp F10 &kp F7 &kp F8 &kp F9 &trans                                     &trans &trans &trans &trans &trans
        &kp F11 &kp F4 &kp F5 &kp F6 &trans                                     &sysrq_emergency_reboot &kp LA(LCTL) &none &trans &trans
        &kp F12 &kp F1 &kp F2 &kp F3 &trans                                     &trans &trans &trans &trans &trans
                       &trans &trans &trans
		>;
		};	
// NUMBERS KEYS
		    numbers_layer {
		bindings = <
		&trans &trans &trans &trans &trans                                      &trans &kp N7 &kp N8 &kp N9 &trans
        &trans &none &trans &trans &trans                                       &kp COMMA &kp N1 &kp N2 &kp N3 &kp N0
        &trans &trans &trans &trans &trans                                      &trans &kp N4 &kp N5 &kp N6 &kp DOT
                      &trans &trans &trans                                      &trans &trans &trans
		>;
		};

// MEDIA LAYER
		    media_layer {
		bindings = <
		&trans  &trans &trans &trans &trans 		                            &kp K_MUTE &kp K_VOLUME_DOWN   &kp K_VOLUME_UP   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
		&trans  &trans &none &trans &trans  			                        &trans &kp K_PLAY_PAUSE  &kp K_PREV &kp K_NEXT &kp K_STOP2
		&trans  &trans &trans &trans &trans   			                        &trans &trans &trans &trans &trans
				            	&trans &trans &trans  					        &trans &trans &trans
		>;
		};

// KEYBOARD LAYER
// reset and bootloader must be present on both sides as they only work on the side where they are pressed
// BT_CLR is intentionally placed in a cumbersome position
		    keyboard_layer {
		bindings = <
		&reset  &bootloader &none &none &out OUT_USB 			        &out OUT_BLE &none   &none   &bootloader  &reset
		&none &none &bt BT_PRV &bt BT_NXT &bt BT_CLR  			        &to QWERTY &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
		&none  &none &none &none &bt BT_CLR   				            &none &none &none &none &bt BT_SEL 4
				            	&trans &trans &trans  					&trans &trans &trans
		>;
		};

//  QWERTY, mainly for gaming or letting others try the keyboard
       		qwerty_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R  &kp T 						&kp Y &kp U  &kp I &kp O &kp P
		&kp A &kp S &kp D &kp F &kp G 			        	&kp H &kp J &kp K &kp L &kp BKSP
		&kp Z &kp X &kp C &kp V &kp B				        &kp M &kp N &kp CMMA &kp DOT &mt LSHFT IT_MINUS
          				&kp SPC &none &none   		        &none &none &kp RET
		>;
		};

	};
};
